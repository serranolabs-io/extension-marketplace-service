/*
 * Extension Config API
 *
 * API to submit and publish an ExtensionConfig object
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (

	// WARNING!
	// Pass --git-repo-id and --git-user-id properties when generating the code
	//
	sw "github.com/GIT_USER_ID/GIT_REPO_ID/go"
	"github.com/GIT_USER_ID/GIT_REPO_ID/shared"
	"github.com/charmbracelet/log"
)

func main() {

	log.Printf("Server started")

	supabaseClient, _ := shared.Setup()

	routes := sw.ApiHandleFunctions{}
	routes.DefaultAPI.SupabaseClient = supabaseClient
	router := sw.NewRouter(routes)
	log.Printf("Server running on port 8080")

	/*
		// NewRouter returns a new router.
		func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {

			engine := gin.Default()
			engine.Use(cors.New(cors.Config{
				AllowOrigins:     []string{"http://localhost:5003"},
				AllowMethods:     []string{"GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"},
				AllowHeaders:     []string{"Origin", "Content-Type", "Accept"},
				ExposeHeaders:    []string{"Content-Length"},
				AllowCredentials: true,
				MaxAge:           12 * time.Hour,
			}))
			return NewRouterWithGinEngine(engine, handleFunctions)
		}

	*/

	log.Fatal(router.Run(":8080"))
}
